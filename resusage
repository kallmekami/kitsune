#!/bin/bash

# Function to check and install missing packages
check_install_package() {
    if ! dpkg -s "$1" &> /dev/null; then
        echo "Package $1 is not installed. Installing..."
        sudo apt-get install -y "$1"
    else
        echo "Package $1 is already installed."
    fi
}

# Required packages
required_packages=(bc awk grep ss column)

# Check and install required packages
echo "Checking for required packages..."
for package in "${required_packages[@]}"; do
    check_install_package "$package"
done

echo

# Colors for output
RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
GREEN=$(tput setaf 2)
RESET=$(tput sgr0)

echo "========================================"
echo "           Monitoring Logs              "
echo "========================================"

user_logs() {
    local username=$1

    echo "Logs for user: ${username}"

    echo
    echo "Checking /var/log/syslog..."
    echo
    echo "----------------------------------------"
    echo "User Log Entries:"
    echo "----------------------------------------"
    grep -i "$username" /var/log/syslog | tail -n 10 | while read -r line; do
        if echo "$line" | grep -iq "error"; then
            echo "${RED}${line}${RESET}"
        elif echo "$line" | grep -iq "warn"; then
            echo "${YELLOW}${line}${RESET}"
        elif echo "$line" | grep -iq "login"; then
            echo "${GREEN}${line}${RESET}"
        elif echo "$line" | grep -iq "logout"; then
            echo "${YELLOW}${line}${RESET}"
        else
            echo "$line"
        fi
    done

    echo
    echo "Checking /var/log/auth.log..."
    echo
    echo "----------------------------------------"
    echo "User Log Entries:"
    echo "----------------------------------------"
    grep -i "$username" /var/log/auth.log | tail -n 10 | while read -r line; do
        if echo "$line" | grep -iq "error"; then
            echo "${RED}${line}${RESET}"
        elif echo "$line" | grep -iq "warn"; then
            echo "${YELLOW}${line}${RESET}"
        elif echo "$line" | grep -iq "login"; then
            echo "${GREEN}${line}${RESET}"
        elif echo "$line" | grep -iq "logout"; then
            echo "${YELLOW}${line}${RESET}"
        else
            echo "$line"
        fi
    done

    log_files=("/var/log/maillog" "/var/log/httpd/access_log" "/var/log/httpd/error_log" "/var/log/messages" "/var/log/secure" "/var/log/fail2ban.log")
    for log_file in "${log_files[@]}"; do
        echo
        echo "Checking ${log_file}..."
        if [ -f "$log_file" ]; then
            echo
            echo "----------------------------------------"
            echo "User Log Entries:"
            echo "----------------------------------------"
            grep -i "$username" "$log_file" | tail -n 10
        else
            echo "Log file ${log_file} does not exist."
        fi
    done
}

service_logs() {
    local service=$1

    echo "========================================"
    echo "            Service Logs                "
    echo "========================================"

    echo "Checking /var/log/syslog for service logs..."
    echo
    echo "----------------------------------------"
    echo "Service Log Entries:"
    echo "----------------------------------------"
    grep -i "$service" /var/log/syslog | tail -n 10 | while read -r line; do
        if echo "$line" | grep -iq "error"; then
            echo "${RED}${line}${RESET}"
        elif echo "$line" | grep -iq "warn"; then
            echo "${YELLOW}${line}${RESET}"
        else
            echo "$line"
        fi
    done
}

resource_usage() {
    local username=$1
    local service=$2

    echo "========================================"
    echo "       Resource Usage Monitoring        "
    echo "========================================"
    
    echo
    printf "%-15s %-10s %-10s %-10s\n" "User" "CPU (%)" "Memory (%)" "Memory (MB)"
    echo "------------------------------------------------------------"
    
    ps -u "$username" -o user,pcpu,pmem,rss | grep -v "USER" | awk -v username="$username" '{rss_MB = $4 / 1024; printf "%-15s %-10.2f %-10.2f %-10.2f\n", $1, $2, $3, rss_MB}' | column -t
    
    echo

    echo "Service Resource Usage for $service"
    echo "========================================"
    printf "%-15s %-10s %-10s %-10s\n" "Service" "CPU (%)" "Memory (%)" "Memory (MB)"
    echo "------------------------------------------------------------"
    
    ps -u "$username" -o comm,pcpu,pmem,rss | grep -v "COMMAND" | grep "$service" | awk '{rss_MB = $4 / 1024; printf "%-15s %-10.2f %-10.2f %-10.2f\n", $1, $2, $3, rss_MB}' | column -t
    
    echo

    total_cpu=$(ps -u "$username" -o pcpu= | awk '{sum += $1} END {print sum}')
    total_mem=$(ps -u "$username" -o rss= | awk '{sum += $1} END {print sum / 1024}')

    echo "========================================"
    echo "               Total Usage              "
    echo "========================================"
    echo "Total CPU Usage: $total_cpu %"
    echo "Total Memory Usage: $total_mem MB"
}

# Get username input
read -rp "Enter the username to monitor: " username
# Get service input
read -rp "Enter the service to monitor: " service

# Run functions
user_logs "$username"
service_logs "$service"
resource_usage "$username" "$service"