#!/bin/bash

# Function to check and install missing packages
check_install_package() {
    if ! dpkg -s "$1" &> /dev/null; then
        echo "Package $1 is not installed. Installing..."
        sudo apt-get install -y "$1"
    else
        echo "Package $1 is already installed."
    fi
}

# Required packages
required_packages=(bc awk grep ss column vnstat)

# Check and install required packages
echo "Checking for required packages..."
for package in "${required_packages[@]}"; do
    check_install_package "$package"
done

echo

# Colors for output
RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
GREEN=$(tput setaf 2)
RESET=$(tput sgr0)

echo "========================================"
echo "           Monitoring Logs              "
echo "========================================"

service_logs() {
    local service=$1

    echo "========================================"
    echo "            Service Logs                "
    echo "========================================"

    # Check the log file for the specified service
    log_file="/var/log/syslog"  # You can change this to the appropriate log file for your service
    echo "Checking ${log_file} for service: ${service}"
    echo
    echo "----------------------------------------"
    echo "Service Log Entries:"
    echo "----------------------------------------"
    
    grep -i "$service" "$log_file" | while read -r line; do
        if echo "$line" | grep -iq "error"; then
            echo "${RED}${line}${RESET}"
        elif echo "$line" | grep -iq "warn"; then
            echo "${YELLOW}${line}${RESET}"
        else
            echo "$line"
        fi
    done
}

resource_usage() {
    local username=$1

    echo "========================================"
    echo "       Total Resource Usage             "
    echo "========================================"

    # Calculate total CPU usage
    total_cpu=$(ps -u "$username" -o pcpu= | awk '{sum += $1} END {print sum}')
    
    # Calculate total memory usage (RSS in MB)
    total_mem=$(ps -u "$username" -o rss= | awk '{sum += $1} END {print sum / 1024}')  # Convert from KB to MB

    # Get total bandwidth usage
    # Assuming vnstat is monitoring the network interfaces
    bandwidth_info=$(vnstat --oneline | awk -F';' '{print $9}')

    # Output results
    echo "Total CPU Usage: $total_cpu %"
    echo "Total Memory Usage: $total_mem MB"
    echo "Total Bandwidth Usage: $bandwidth_info"
}

# Get username input
read -rp "Enter the username to monitor: " username

# Suggest available services
echo "Available services to monitor:"
# Get the list of active services
active_services=$(systemctl list-units --type=service --state=running | awk '{print $1}' | sed 's/.service//')
echo "${active_services}"

# Get service input
read -rp "Enter the service to monitor: " service

# Run functions
service_logs "$service"
resource_usage "$username"
